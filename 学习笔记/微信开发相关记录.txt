/*****************************************************************
使用接口创建自定义菜单后，开发者还可使用接口查询自定义菜单的结构。
一、请求说明
1)http请求方式：GET
2)https://api.weixin.qq.com/cgi-bin/menu/get?access_token=ACCESS_TOKEN
二、返回说明
对应创建接口，正确的Json返回结果:
{
	"menu":{
		"button":[
			{
			"type":"click",
			"name":"今日歌曲",
			"key":"V1001_TODAY_MUSIC",
			"sub_button":[]
			},
			{
			"type":"click",
			"name":"歌手简介",
			"key":"V1001_TODAY_SINGER",
			"sub_button":[]
			},
			{
			"name":"菜单",
			"sub_button":[{
				"type":"view",
				"name":"搜索",
				"url":"http://www.soso.com/",
				"sub_button":[]
				},
				{
				"type":"view",
				"name":"视频",
				"url":"http://v.qq.com/",
				"sub_button":[]
				},
				{
				"type":"click",
				"name":"赞一下我们",
				"key":"V1001_GOOD",
				"sub_button":[]
			}]
		}]
	}
}



===================java版微信公众平台开发-文本链接网页================
错误用法1（a标签的href属性值未被引号引起）：
<ahref=http://www.baidu.com>百度</a>
错误用法2（a标签的href属性值被单引号引起）：
<ahref=‘http://www.baidu.com’>百度</a>
正确的用法是将a标签href属性的值用双引号引起，代码如下：
<ahref="http://www.baidu.com">百度</a>

微信开发发送链接 形式 <a href="http://www.baidu.com/">百度</a> ，但是就这样添加到 <content>键值对中 消息是不会正常发送的，遇到<a就不能发送了。那么需要转义 <使用&lt;代替 >使用&gt;代替  ；
也就是链接最终是  &lt;a href="http://www.baidu.com/"&gt;百度&lt;/a&gt;这样的形式放到<content>中。
=========================================================================

**************Java开发微信主要请求****************
package weixin.guanjia.core.controller;
 
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
 
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
 
import org.springframework.beans.factory.annotation.Autowired;
 
import weixin.guanjia.account.entity.WeixinAccountEntity;
import weixin.guanjia.account.service.WeixinAccountServiceI;
import weixin.guanjia.account.service.impl.WeixinAccountServiceImpl;
import weixin.guanjia.core.service.impl.WechatService;
import weixin.guanjia.core.util.SignUtil;
 
/**
 * 核心请求处理类
 * 
 * @author liufeng
 * @date 2013-05-18
 */
public class WeixinServlet extends HttpServlet {
    private static final long serialVersionUID = 4440739483644821986L;
    @Autowired
    private WeixinAccountServiceI weixinAccountService;
 
    @Override
    public void init() throws ServletException {
         weixinAccountService =new WeixinAccountServiceImpl();
    }
    /**
     * 确认请求来自微信服务器
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // 微信加密签名
        String signature = request.getParameter("signature");
        // 时间戳
        String timestamp = request.getParameter("timestamp");
        // 随机数
        String nonce = request.getParameter("nonce");
        // 随机字符串
        String echostr = request.getParameter("echostr");
 
        PrintWriter out = response.getWriter();
        List<WeixinAccountEntity> weixinAccountEntities = weixinAccountService
                .getList(WeixinAccountEntity.class);
        // 通过检验signature对请求进行校验，若校验成功则原样返回echostr，表示接入成功，否则接入失败
        for (WeixinAccountEntity account : weixinAccountEntities) {
            if (SignUtil.checkSignature(account.getAccounttoken(), signature,
                    timestamp, nonce)) {
                out.print(echostr);
            }
        }
        out.close();
        out = null;
    }
 
    /**
     * 处理微信服务器发来的消息
     */
    public void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // 将请求、响应的编码均设置为UTF-8（防止中文乱码）
        request.setCharacterEncoding("UTF-8");
        response.setCharacterEncoding("UTF-8");
        WechatService wechatService = new WechatService();
        // 调用核心业务类接收消息、处理消息
        String respMessage = wechatService.coreService(request);
        // 响应消息
        PrintWriter out = response.getWriter();
        out.print(respMessage);
        out.close();
    }
 
}
***********************************************